# Build stage
FROM node:18-alpine as build

WORKDIR /app

# Copy package files
COPY package*.json ./

# Clean npm cache and install dependencies
RUN npm cache clean --force && \
    npm install --legacy-peer-deps && \
    npm install --legacy-peer-deps \
    date-fns@2.30.0 \
    @date-io/date-fns@2.17.0 \
    @mui/material@5.14.14 \
    @mui/icons-material@5.14.14 \
    @mui/system@5.14.14 \
    @mui/x-date-pickers@6.16.3 \
    @emotion/react \
    @emotion/styled

# Copy source code
COPY . .

# Create production build with increased memory
ENV NODE_OPTIONS="--max-old-space-size=4096"
RUN npm run build

# Serve stage
FROM nginx:alpine

# Copy built files from build stage
COPY --from=build /app/dist /usr/share/nginx/html

# Copy nginx configuration
COPY nginx.conf /etc/nginx/conf.d/default.conf

# Expose port
EXPOSE 80

CMD ["nginx", "-g", "daemon off;"] 